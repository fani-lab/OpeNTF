python -m venv opentf_venv
source opentf_venv/bin/activate on Unix/macOS 
opentf_venv\Scripts\activate on Windows. 

to do:

update to readme for cmn layer and main readme 

d2v >> run on entire datasets
- dblp.v12.json >> done 
- dblp.v12.json.mt10.ts2 >> done 
- title.basics.tsv >> running
- title.basics.tsv.mt10.ts2 >> running

-- gnn-transferred
node2vec >> done >> yet to be run on entire datasets >> also check to engage cuda
metapath2vec 

gs
gat
gin

-- end2end
node2vec >> we didnot have it! but we can, right?
metapath2vec >> we didnot have it! but we can, right?
why not d2v when we have team, skill, and member vectors?

update/check cmn.team.Team.get_stats()
update/check cmn.patent.Patent.get_stats()
make cmn.team.Team.get_stats() gpu-friendly

=======================================================
-- contextual embeddings (transfer or preinit e2e)>> llm-based >> sentencetranformer

new change to the skill subset >> skill list for each team, ordered skills
- dblp based on fos score
- gith based on line numbers of the langs
- imdb based on the genre, subgenre, ... the actual order in the dataset

lazy load update -- when doing the filtering, we read from scratch. We can load the teams.pkl and filter, and update it. >> messy and confusing, not worth it
- embeddings for experts. in future may want to do skill-experts in input ...)
--------------------------------------------------------